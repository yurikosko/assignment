"use strict";
// -------------------------------------------------------------
// WARNING: this file is used by both the client and the server.
// Do not use any browser or node-specific API!
// -------------------------------------------------------------
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = {
    click: 'click',
    rightClick: 'right-click',
    doubleClick: 'double-click',
    drag: 'drag',
    dragToElement: 'drag-to-element',
    hover: 'hover',
    scroll: 'scroll',
    scrollBy: 'scroll-by',
    scrollIntoView: 'scroll-into-view',
    typeText: 'type-text',
    selectText: 'select-text',
    selectTextAreaContent: 'select-text-area-content',
    selectEditableContent: 'select-editable-content',
    pressKey: 'press-key',
    wait: 'wait',
    navigateTo: 'navigate-to',
    setFilesToUpload: 'set-files-to-upload',
    clearUpload: 'clear-upload',
    executeClientFunction: 'execute-client-function',
    executeSelector: 'execute-selector',
    takeScreenshot: 'take-screenshot',
    takeElementScreenshot: 'take-element-screenshot',
    takeScreenshotOnFail: 'take-screenshot-on-fail',
    prepareBrowserManipulation: 'prepare-browser-manipulation',
    showAssertionRetriesStatus: 'show-assertion-retries-status',
    hideAssertionRetriesStatus: 'hide-assertion-retries-status',
    setBreakpoint: 'set-breakpoint',
    resizeWindow: 'resize-window',
    resizeWindowToFitDevice: 'resize-window-to-fit-device',
    maximizeWindow: 'maximize-window',
    switchToIframe: 'switch-to-iframe',
    switchToMainWindow: 'switch-to-main-window',
    openWindow: 'open-window',
    closeWindow: 'close-window',
    getCurrentWindow: 'get-current-window',
    getCurrentWindows: 'get-current-windows',
    switchToWindow: 'switch-to-window',
    switchToWindowByPredicate: 'switch-to-window-by-predicate',
    switchToParentWindow: 'switch-to-parent-window',
    switchToPreviousWindow: 'switch-to-previous-window',
    setNativeDialogHandler: 'set-native-dialog-handler',
    getNativeDialogHistory: 'get-native-dialog-history',
    getBrowserConsoleMessages: 'get-browser-console-messages',
    setTestSpeed: 'set-test-speed',
    setPageLoadTimeout: 'set-page-load-timeout',
    debug: 'debug',
    assertion: 'assertion',
    useRole: 'useRole',
    testDone: 'test-done',
    backupStorages: 'backup-storages',
    executeExpression: 'execute-expression',
    executeAsyncExpression: 'execute-async-expression',
    unlockPage: 'unlock-page',
    recorder: 'recorder'
};
module.exports = exports.default;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHlwZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90ZXN0LXJ1bi9jb21tYW5kcy90eXBlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxnRUFBZ0U7QUFDaEUsZ0VBQWdFO0FBQ2hFLCtDQUErQztBQUMvQyxnRUFBZ0U7O0FBRWhFLGtCQUFlO0lBQ1gsS0FBSyxFQUF1QixPQUFPO0lBQ25DLFVBQVUsRUFBa0IsYUFBYTtJQUN6QyxXQUFXLEVBQWlCLGNBQWM7SUFDMUMsSUFBSSxFQUF3QixNQUFNO0lBQ2xDLGFBQWEsRUFBZSxpQkFBaUI7SUFDN0MsS0FBSyxFQUF1QixPQUFPO0lBQ25DLE1BQU0sRUFBc0IsUUFBUTtJQUNwQyxRQUFRLEVBQW9CLFdBQVc7SUFDdkMsY0FBYyxFQUFjLGtCQUFrQjtJQUM5QyxRQUFRLEVBQW9CLFdBQVc7SUFDdkMsVUFBVSxFQUFrQixhQUFhO0lBQ3pDLHFCQUFxQixFQUFPLDBCQUEwQjtJQUN0RCxxQkFBcUIsRUFBTyx5QkFBeUI7SUFDckQsUUFBUSxFQUFvQixXQUFXO0lBQ3ZDLElBQUksRUFBd0IsTUFBTTtJQUNsQyxVQUFVLEVBQWtCLGFBQWE7SUFDekMsZ0JBQWdCLEVBQVkscUJBQXFCO0lBQ2pELFdBQVcsRUFBaUIsY0FBYztJQUMxQyxxQkFBcUIsRUFBTyx5QkFBeUI7SUFDckQsZUFBZSxFQUFhLGtCQUFrQjtJQUM5QyxjQUFjLEVBQWMsaUJBQWlCO0lBQzdDLHFCQUFxQixFQUFPLHlCQUF5QjtJQUNyRCxvQkFBb0IsRUFBUSx5QkFBeUI7SUFDckQsMEJBQTBCLEVBQUUsOEJBQThCO0lBQzFELDBCQUEwQixFQUFFLCtCQUErQjtJQUMzRCwwQkFBMEIsRUFBRSwrQkFBK0I7SUFDM0QsYUFBYSxFQUFlLGdCQUFnQjtJQUM1QyxZQUFZLEVBQWdCLGVBQWU7SUFDM0MsdUJBQXVCLEVBQUssNkJBQTZCO0lBQ3pELGNBQWMsRUFBYyxpQkFBaUI7SUFDN0MsY0FBYyxFQUFjLGtCQUFrQjtJQUM5QyxrQkFBa0IsRUFBVSx1QkFBdUI7SUFDbkQsVUFBVSxFQUFrQixhQUFhO0lBQ3pDLFdBQVcsRUFBaUIsY0FBYztJQUMxQyxnQkFBZ0IsRUFBWSxvQkFBb0I7SUFDaEQsaUJBQWlCLEVBQVcscUJBQXFCO0lBQ2pELGNBQWMsRUFBYyxrQkFBa0I7SUFDOUMseUJBQXlCLEVBQUcsK0JBQStCO0lBQzNELG9CQUFvQixFQUFRLHlCQUF5QjtJQUNyRCxzQkFBc0IsRUFBTSwyQkFBMkI7SUFDdkQsc0JBQXNCLEVBQU0sMkJBQTJCO0lBQ3ZELHNCQUFzQixFQUFNLDJCQUEyQjtJQUN2RCx5QkFBeUIsRUFBRyw4QkFBOEI7SUFDMUQsWUFBWSxFQUFnQixnQkFBZ0I7SUFDNUMsa0JBQWtCLEVBQVUsdUJBQXVCO0lBQ25ELEtBQUssRUFBdUIsT0FBTztJQUNuQyxTQUFTLEVBQW1CLFdBQVc7SUFDdkMsT0FBTyxFQUFxQixTQUFTO0lBQ3JDLFFBQVEsRUFBb0IsV0FBVztJQUN2QyxjQUFjLEVBQWMsaUJBQWlCO0lBQzdDLGlCQUFpQixFQUFXLG9CQUFvQjtJQUNoRCxzQkFBc0IsRUFBTSwwQkFBMEI7SUFDdEQsVUFBVSxFQUFrQixhQUFhO0lBQ3pDLFFBQVEsRUFBb0IsVUFBVTtDQUN6QyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gV0FSTklORzogdGhpcyBmaWxlIGlzIHVzZWQgYnkgYm90aCB0aGUgY2xpZW50IGFuZCB0aGUgc2VydmVyLlxuLy8gRG8gbm90IHVzZSBhbnkgYnJvd3NlciBvciBub2RlLXNwZWNpZmljIEFQSSFcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuZXhwb3J0IGRlZmF1bHQge1xuICAgIGNsaWNrOiAgICAgICAgICAgICAgICAgICAgICAnY2xpY2snLFxuICAgIHJpZ2h0Q2xpY2s6ICAgICAgICAgICAgICAgICAncmlnaHQtY2xpY2snLFxuICAgIGRvdWJsZUNsaWNrOiAgICAgICAgICAgICAgICAnZG91YmxlLWNsaWNrJyxcbiAgICBkcmFnOiAgICAgICAgICAgICAgICAgICAgICAgJ2RyYWcnLFxuICAgIGRyYWdUb0VsZW1lbnQ6ICAgICAgICAgICAgICAnZHJhZy10by1lbGVtZW50JyxcbiAgICBob3ZlcjogICAgICAgICAgICAgICAgICAgICAgJ2hvdmVyJyxcbiAgICBzY3JvbGw6ICAgICAgICAgICAgICAgICAgICAgJ3Njcm9sbCcsXG4gICAgc2Nyb2xsQnk6ICAgICAgICAgICAgICAgICAgICdzY3JvbGwtYnknLFxuICAgIHNjcm9sbEludG9WaWV3OiAgICAgICAgICAgICAnc2Nyb2xsLWludG8tdmlldycsXG4gICAgdHlwZVRleHQ6ICAgICAgICAgICAgICAgICAgICd0eXBlLXRleHQnLFxuICAgIHNlbGVjdFRleHQ6ICAgICAgICAgICAgICAgICAnc2VsZWN0LXRleHQnLFxuICAgIHNlbGVjdFRleHRBcmVhQ29udGVudDogICAgICAnc2VsZWN0LXRleHQtYXJlYS1jb250ZW50JyxcbiAgICBzZWxlY3RFZGl0YWJsZUNvbnRlbnQ6ICAgICAgJ3NlbGVjdC1lZGl0YWJsZS1jb250ZW50JyxcbiAgICBwcmVzc0tleTogICAgICAgICAgICAgICAgICAgJ3ByZXNzLWtleScsXG4gICAgd2FpdDogICAgICAgICAgICAgICAgICAgICAgICd3YWl0JyxcbiAgICBuYXZpZ2F0ZVRvOiAgICAgICAgICAgICAgICAgJ25hdmlnYXRlLXRvJyxcbiAgICBzZXRGaWxlc1RvVXBsb2FkOiAgICAgICAgICAgJ3NldC1maWxlcy10by11cGxvYWQnLFxuICAgIGNsZWFyVXBsb2FkOiAgICAgICAgICAgICAgICAnY2xlYXItdXBsb2FkJyxcbiAgICBleGVjdXRlQ2xpZW50RnVuY3Rpb246ICAgICAgJ2V4ZWN1dGUtY2xpZW50LWZ1bmN0aW9uJyxcbiAgICBleGVjdXRlU2VsZWN0b3I6ICAgICAgICAgICAgJ2V4ZWN1dGUtc2VsZWN0b3InLFxuICAgIHRha2VTY3JlZW5zaG90OiAgICAgICAgICAgICAndGFrZS1zY3JlZW5zaG90JyxcbiAgICB0YWtlRWxlbWVudFNjcmVlbnNob3Q6ICAgICAgJ3Rha2UtZWxlbWVudC1zY3JlZW5zaG90JyxcbiAgICB0YWtlU2NyZWVuc2hvdE9uRmFpbDogICAgICAgJ3Rha2Utc2NyZWVuc2hvdC1vbi1mYWlsJyxcbiAgICBwcmVwYXJlQnJvd3Nlck1hbmlwdWxhdGlvbjogJ3ByZXBhcmUtYnJvd3Nlci1tYW5pcHVsYXRpb24nLFxuICAgIHNob3dBc3NlcnRpb25SZXRyaWVzU3RhdHVzOiAnc2hvdy1hc3NlcnRpb24tcmV0cmllcy1zdGF0dXMnLFxuICAgIGhpZGVBc3NlcnRpb25SZXRyaWVzU3RhdHVzOiAnaGlkZS1hc3NlcnRpb24tcmV0cmllcy1zdGF0dXMnLFxuICAgIHNldEJyZWFrcG9pbnQ6ICAgICAgICAgICAgICAnc2V0LWJyZWFrcG9pbnQnLFxuICAgIHJlc2l6ZVdpbmRvdzogICAgICAgICAgICAgICAncmVzaXplLXdpbmRvdycsXG4gICAgcmVzaXplV2luZG93VG9GaXREZXZpY2U6ICAgICdyZXNpemUtd2luZG93LXRvLWZpdC1kZXZpY2UnLFxuICAgIG1heGltaXplV2luZG93OiAgICAgICAgICAgICAnbWF4aW1pemUtd2luZG93JyxcbiAgICBzd2l0Y2hUb0lmcmFtZTogICAgICAgICAgICAgJ3N3aXRjaC10by1pZnJhbWUnLFxuICAgIHN3aXRjaFRvTWFpbldpbmRvdzogICAgICAgICAnc3dpdGNoLXRvLW1haW4td2luZG93JyxcbiAgICBvcGVuV2luZG93OiAgICAgICAgICAgICAgICAgJ29wZW4td2luZG93JyxcbiAgICBjbG9zZVdpbmRvdzogICAgICAgICAgICAgICAgJ2Nsb3NlLXdpbmRvdycsXG4gICAgZ2V0Q3VycmVudFdpbmRvdzogICAgICAgICAgICdnZXQtY3VycmVudC13aW5kb3cnLFxuICAgIGdldEN1cnJlbnRXaW5kb3dzOiAgICAgICAgICAnZ2V0LWN1cnJlbnQtd2luZG93cycsXG4gICAgc3dpdGNoVG9XaW5kb3c6ICAgICAgICAgICAgICdzd2l0Y2gtdG8td2luZG93JyxcbiAgICBzd2l0Y2hUb1dpbmRvd0J5UHJlZGljYXRlOiAgJ3N3aXRjaC10by13aW5kb3ctYnktcHJlZGljYXRlJyxcbiAgICBzd2l0Y2hUb1BhcmVudFdpbmRvdzogICAgICAgJ3N3aXRjaC10by1wYXJlbnQtd2luZG93JyxcbiAgICBzd2l0Y2hUb1ByZXZpb3VzV2luZG93OiAgICAgJ3N3aXRjaC10by1wcmV2aW91cy13aW5kb3cnLFxuICAgIHNldE5hdGl2ZURpYWxvZ0hhbmRsZXI6ICAgICAnc2V0LW5hdGl2ZS1kaWFsb2ctaGFuZGxlcicsXG4gICAgZ2V0TmF0aXZlRGlhbG9nSGlzdG9yeTogICAgICdnZXQtbmF0aXZlLWRpYWxvZy1oaXN0b3J5JyxcbiAgICBnZXRCcm93c2VyQ29uc29sZU1lc3NhZ2VzOiAgJ2dldC1icm93c2VyLWNvbnNvbGUtbWVzc2FnZXMnLFxuICAgIHNldFRlc3RTcGVlZDogICAgICAgICAgICAgICAnc2V0LXRlc3Qtc3BlZWQnLFxuICAgIHNldFBhZ2VMb2FkVGltZW91dDogICAgICAgICAnc2V0LXBhZ2UtbG9hZC10aW1lb3V0JyxcbiAgICBkZWJ1ZzogICAgICAgICAgICAgICAgICAgICAgJ2RlYnVnJyxcbiAgICBhc3NlcnRpb246ICAgICAgICAgICAgICAgICAgJ2Fzc2VydGlvbicsXG4gICAgdXNlUm9sZTogICAgICAgICAgICAgICAgICAgICd1c2VSb2xlJyxcbiAgICB0ZXN0RG9uZTogICAgICAgICAgICAgICAgICAgJ3Rlc3QtZG9uZScsXG4gICAgYmFja3VwU3RvcmFnZXM6ICAgICAgICAgICAgICdiYWNrdXAtc3RvcmFnZXMnLFxuICAgIGV4ZWN1dGVFeHByZXNzaW9uOiAgICAgICAgICAnZXhlY3V0ZS1leHByZXNzaW9uJyxcbiAgICBleGVjdXRlQXN5bmNFeHByZXNzaW9uOiAgICAgJ2V4ZWN1dGUtYXN5bmMtZXhwcmVzc2lvbicsXG4gICAgdW5sb2NrUGFnZTogICAgICAgICAgICAgICAgICd1bmxvY2stcGFnZScsXG4gICAgcmVjb3JkZXI6ICAgICAgICAgICAgICAgICAgICdyZWNvcmRlcidcbn07XG4iXX0=